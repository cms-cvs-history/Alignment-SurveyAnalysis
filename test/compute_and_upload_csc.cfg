process computeAndUpload =
{
  service = MessageLogger {
      untracked vstring destinations = {"cout"}
      untracked PSet cout = {
          untracked string threshold = "DEBUG"
      }
  }
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
  include "Geometry/DTGeometry/data/dtGeometry.cfi"
  include "Geometry/CSCGeometry/data/cscGeometry.cfi"
  include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"
  include "Alignment/SurveyAnalysis/test/dbSetup.cfi"

  source = EmptySource {}
  untracked PSet maxEvents = {untracked int32 input = 0}

  module calcCSC = SurveyInputCSCfromPins {
    string pinPositions = "Alignment/SurveyAnalysis/data/CSCAlignmentPins.txt"
    string rootFile = "Res1.root"
    bool verbose=true
  }

  module uploader = SurveyDBUploader {
    string valueRcd = "CSCSurveyRcd"
    string errorRcd = "CSCSurveyErrorRcd"
  }

   service = PoolDBOutputService {
     using dbSetup
     VPSet toPut = { { string record = "CSCSurveyRcd"      string  
tag = "valueTag" },
                     { string record = "CSCSurveyErrorRcd" string  
tag = "errorTag" } }

   }
  replace PoolDBOutputService.connect = "sqlite_file:CSCAlignments.db"    

  path p = {calcCSC, uploader}
}
