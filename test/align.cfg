process Alignment =
{
    include "Alignment/CommonAlignmentProducer/data/AlignmentProducer.cff"
    include "Alignment/SurveyAnalysis/test/dbSetup.cfi"
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

    service = MessageLogger
    {
      untracked vstring destinations = {'cout'}

      untracked PSet cout = { untracked string threshold = 'WARNING' }
    }

    source = EmptySource {}

    untracked PSet maxEvents = { untracked int32 input = 0 }

    es_source = PoolDBESSource
    {
        using dbSetup

        VPSet toGet = { {using surveyValueRcd}, {using surveyErrorRcd},
                        {using alignValueRcd}, {using alignErrorRcd} }
    }

    replace AlignmentProducer.ParameterBuilder.Selector =
    {
        PSet layer = {
            vdouble etaRanges = {} # empty array means no restriction
            vdouble zRanges   = {45., 55.} # forward side
            vdouble rRanges   = {}
            vdouble phiRanges = {} # {1.35, 1.55} # top panel
        }

        vstring alignParams = {'PXECDets,111111,layer'}
    }

    replace AlignmentProducer.applyDbAlignment = true
    replace AlignmentProducer.parameterSelectorSimple = '000000'
    replace AlignmentProducer.randomShift             = 0.1
    replace AlignmentProducer.randomRotation          = 0.1

    replace AlignmentProducer.algoConfig =
    {
        # using DefaultRefitter
        string algoName   = 'SurveyAlignmentAlgorithm'
        string outfile    = 'survey/shifts.root'
        uint32 nIteration = 100
        vstring levels    = {"Petal", "Endcap"}
    }
}
