process Alignment =
{
    include "Alignment/CommonAlignmentProducer/data/AlignmentProducer.cff"
    include "Alignment/SurveyAnalysis/test/dbSetup.cfi"
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

    service = MessageLogger
    {
      untracked vstring destinations = {'cout'}

      untracked PSet cout = { untracked string threshold = 'WARNING' }
    }

    source = EmptySource {}

    untracked PSet maxEvents = { untracked int32 input = 0 }

    es_source = PoolDBESSource
    {
        using dbSetup

        VPSet toGet = { {using surveyValueRcd}, {using surveyErrorRcd} }
    }

    replace AlignmentProducer.ParameterBuilder.Selector =
    {
        PSet halfCyl = {
            vdouble etaRanges = {} # empty array means no restriction
            vdouble zRanges   = {} # {30., 55.} # forward side
            vdouble rRanges   = {}
            vdouble phiRanges = {1.57, 4.72}
        }

        vstring alignParams = {'PXECDets,111111'}
    }

  replace AlignmentProducer.MisalignmentScenario.TPEs =
  {
    double scale = 1.0

    PSet DetUnits =
    {
      double dX = 0.1 double dY = 0.1 double dZ = 0.1
      double phiX = 0.1 double phiY = 0.1 double phiZ = 0.1
    }
  }

    replace AlignmentProducer.doMisalignmentScenario = true
#    replace AlignmentProducer.randomShift             = 0.01
#    replace AlignmentProducer.randomRotation          = 0.01

    replace AlignmentProducer.algoConfig =
    {
        # using DefaultRefitter
        string algoName   = 'SurveyAlignmentAlgorithm'
        string outfile    = '~/scratch0/survey/shifts.root'
        uint32 nIteration = 100
        vstring levels    = {'DetUnit', 'Panel', 'Blade', 'HalfDisk', 'HalfCylinder', 'PixelEndcap'}
    }
}
